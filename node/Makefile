# ============================================================
# üê≥ Node makefile
# ============================================================

DOCKER_COMPOSE = docker compose -f docker/docker-compose.yaml
PHPFPM_EXEC    = $(DOCKER_COMPOSE) exec -it phpfpm-node php
COMPOSER_EXEC  = $(DOCKER_COMPOSE) exec -it phpfpm-node composer

# ------------------------------------------------------------
# üé® Helpers
# ------------------------------------------------------------
GREEN  = \033[0;32m
YELLOW = \033[1;33m
CYAN   = \033[0;36m
RESET  = \033[0m

define PRINT_SECTION
	@echo "$(CYAN)============================================================$(RESET)"
	@echo "$(YELLOW) $1 $(RESET)"
	@echo "$(CYAN)============================================================$(RESET)"
endef


.DEFAULT_GOAL := help

# ------------------------------------------------------------
# üßπ Code Quality
# ------------------------------------------------------------
phpstan:
	$(call PRINT_SECTION,"üîç Running PHPStan analysis")
	$(PHPFPM_EXEC) -d memory_limit=1G vendor/phpstan/phpstan/phpstan analyse src -c phpstan.dist.neon

phpstan-baseline:
	$(call PRINT_SECTION,"üìù Updating PHPStan baseline")
	$(PHPFPM_EXEC) -d memory_limit=1G vendor/phpstan/phpstan/phpstan analyse src -c phpstan.dist.neon -b

csfixer:
	$(call PRINT_SECTION,"üé® Running PHP CS Fixer")
	$(PHPFPM_EXEC) vendor/friendsofphp/php-cs-fixer/php-cs-fixer --config=.php-cs-fixer.dist.php fix

# ------------------------------------------------------------
# üóÑÔ∏è Database & Migrations
# ------------------------------------------------------------
db-migrate:
	$(call PRINT_SECTION,"üì¶ Running Doctrine migrations")
	$(PHPFPM_EXEC) bin/console doc:mig:mig

db-migrate-test:
	$(call PRINT_SECTION,"üß™ Running migrations in test env")
	$(PHPFPM_EXEC) bin/console --env=test doctrine:schema:update --force

db-make-migration:
	$(call PRINT_SECTION,"‚öôÔ∏è  Making a new migration")
	$(PHPFPM_EXEC) bin/console make:mig

db-create-test:
	$(call PRINT_SECTION,"üß™ Creating test database")
	$(PHPFPM_EXEC) bin/console --env=test doctrine:database:create

# ------------------------------------------------------------
# üì¶ Dependencies
# ------------------------------------------------------------
composer-install:
	$(call PRINT_SECTION,"üì• Installing Composer dependencies")
	$(COMPOSER_EXEC) install --prefer-dist -o

# ------------------------------------------------------------
# üé® Assets
# ------------------------------------------------------------
asset-compile:
	$(call PRINT_SECTION,"üé® Compiling Symfony Asset Map")
	rm -rf public/assets
	$(PHPFPM_EXEC) -d memory_limit=1G bin/console asset-map:compile


# ------------------------------------------------------------
# üõ†Ô∏è Meta
# ------------------------------------------------------------
help:
	@echo ""
	@echo "$(GREEN)‚ú® Node Makefile Commands ‚ú®$(RESET)"
	@echo ""
	@echo " üßπ Code Quality"
	@echo "   ‚Ä¢ make phpstan            - Run PHPStan"
	@echo "   ‚Ä¢ make phpstan-baseline   - Update PHPStan baseline"
	@echo "   ‚Ä¢ make csfxier         - Run PHP-CS-Fixer"
	@echo ""
	@echo " üóÑÔ∏è  Database & Migrations"
	@echo "   ‚Ä¢ make db-migrate         - Run migrations"
	@echo "   ‚Ä¢ make db-migrate-test    - Run migrations in test env"
	@echo "   ‚Ä¢ make db-make-migration  - Create a new migration"
	@echo "   ‚Ä¢ make db-create-test  - Create test database"
	@echo ""
	@echo " üé® Assets"
	@echo "   ‚Ä¢ make asset-compile   - Compile asset map"
	@echo ""
	@echo " üì¶ Dependencies"
	@echo "   ‚Ä¢ make install         - Composer install"
	@echo ""
